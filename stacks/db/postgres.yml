services:
  postgres:
    image: pgvector/pgvector:pg17
    networks:
      - network_public
    command:
      ["postgres", "-c", "listen_addresses=*", "-c", "max_connections=200"]
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres-data:/var/lib/postgresql/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
      labels:
        - traefik.enable=false # enable it if will expose
        - traefik.tcp.routers.postgres.rule=HostSNI(`db.website.com`)
        - traefik.tcp.routers.postgres.entrypoints=pgsecure
        - traefik.tcp.routers.postgres.service=postgres
        - traefik.tcp.routers.postgres.tls=true
        - traefik.tcp.routers.postgres.tls.certresolver=letsencryptresolver
        - traefik.tcp.services.postgres.loadbalancer.server.port=5432
        - traefik.tcp.middlewares.pgwhitelist.ipwhitelist.sourcerange=0.0.0.0/0 # (use CIDR notation, e.g., 203.0.113.5/32 for single IP or 10.0.0.0/24 for subnet)
        - traefik.tcp.routers.postgres.middlewares=pgwhitelist@docker
volumes:
  postgres-data:
    driver: local
networks:
  network_public:
    external: true
    name: network_public
